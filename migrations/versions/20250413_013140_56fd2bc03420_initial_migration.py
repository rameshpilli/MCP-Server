"""Initial migration

Revision ID: 56fd2bc03420
Revises: 
Create Date: 2025-04-13 01:31:40.971222

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '56fd2bc03420'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key_id', sa.String(length=255), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('owner', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('rate_limit', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_keys')),
    sa.UniqueConstraint('key', name=op.f('uq_api_keys_key')),
    sa.UniqueConstraint('key_id', name=op.f('uq_api_keys_key_id'))
    )
    op.create_table('models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('backend', sa.Enum('OPENAI', 'AZURE_OPENAI', 'ANTHROPIC', 'HUGGINGFACE', 'CUSTOM', name='modelbackend'), nullable=True),
    sa.Column('api_base', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('model_metadata', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('total_requests', sa.Integer(), nullable=True),
    sa.Column('successful_requests', sa.Integer(), nullable=True),
    sa.Column('failed_requests', sa.Integer(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('average_latency', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_models'))
    )
    op.create_index(op.f('ix_models_model_id'), 'models', ['model_id'], unique=True)
    op.create_table('model_usage_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.String(), nullable=True),
    sa.Column('api_key_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('request_type', sa.String(), nullable=True),
    sa.Column('input_tokens', sa.Integer(), nullable=True),
    sa.Column('output_tokens', sa.Integer(), nullable=True),
    sa.Column('latency', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.Column('request_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], name=op.f('fk_model_usage_logs_api_key_id_api_keys')),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], name=op.f('fk_model_usage_logs_model_id_models')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_model_usage_logs'))
    )
    op.create_table('usage_quotas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_key_id', sa.Integer(), nullable=False),
    sa.Column('quota_type', sa.String(length=50), nullable=True),
    sa.Column('max_requests', sa.Integer(), nullable=True),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('max_cost', sa.Float(), nullable=True),
    sa.Column('reset_frequency', sa.String(length=50), nullable=True),
    sa.Column('last_reset', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], name=op.f('fk_usage_quotas_api_key_id_api_keys')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_usage_quotas'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('usage_quotas')
    op.drop_table('model_usage_logs')
    op.drop_index(op.f('ix_models_model_id'), table_name='models')
    op.drop_table('models')
    op.drop_table('api_keys')
    # ### end Alembic commands ###
